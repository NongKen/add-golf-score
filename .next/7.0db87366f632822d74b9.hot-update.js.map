{"version":3,"file":"7.0db87366f632822d74b9.hot-update.js","sources":["webpack:///pages/hole123.js"],"sourcesContent":["import React from 'react'\nimport Link from 'next/link'\n\nimport { Context, Container, FullBackground } from '../components/baseComponents'\nimport Navbar from '../components/Navbar'\nimport styled from 'styled-components'\nimport firebase from '../libs/firebase'\nimport config from '../config'\n\nconst rootRef = firebase.database().ref('golfscore')\n\nconst Modle = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: #000000cc;\n  :after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n`\n\nconst ModleCard = styled.div`\n  background: white;\n  max-width: 400px;\n  min-height: 400px;\n  margin: auto;\n  margin-top: 20px;\n  border-radius: 16px;\n  padding: 24px;\n\n  pointer-events: none;\n\n  :before {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n`\n\nconst TableWrapper = styled.div`\n  height: 100vh;\n`\n\nconst Table = styled.div`\n  height: 100%;\n  overflow-x: scroll;\n  overflow-y: hidden;\n`\n\nconst TableHead = styled.div`\n  width: fit-content;\n  margin: auto;\n`\n\nconst TableBody = styled.div`\n  overflow-y: scroll;\n  height: 91vh;\n  width: fit-content;\n  margin: auto;\n  ::-webkit-scrollbar { \n    display: none; \n  }\n`\n\nconst TableRow = styled.div`\n  display: flex;\n  background: ${props => props.bgColor || 'transparent'};  \n`\n\nconst TableItem = styled.div` \n  padding: 6px 8px;\n  border: 1px solid black;\n  overflow: hidden;\n  width: ${props => props.width || 'auto'};\n  text-align: ${props => props.align || 'center'};\n  font-weight: ${props => props.bold ? 'bold' : 'normal'};\n  background-color: ${props => props.bgColor || 'transparent'};\n  color: ${props => props.color || 'black'};\n`\n\nconst HoleInput = styled.input`\n  width: 100%;\n  background: transparent;\n  border: none;\n`\n\nconst getSumShot = (data) => {\n  let sum = 0\n  data.forEach(shot => sum += +shot)\n  return sum\n}\n\nconst checkDiffUserCourt = (userRaw, courtRaw) => {\n  const userData = userRaw.filter(data => data)\n  const userLength = userData.length\n  const courtWithUserlength = courtRaw.slice(0, userLength)\n  const sumCourt = getSumShot(courtWithUserlength)\n  const sumShot = getSumShot(userData)\n  return {\n    sumCourt,\n    sumShot\n  }\n}\n\nconst tableConfig = ['25px', '25px', '200px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '25px', '75px']\n  \n\nclass Home extends React.Component {  \n  constructor(props) {\n    super(props)\n    this.state = {\n      formData: null,\n      showModle: false,\n      modleRow: null,\n      modleHole: null\n    }\n    rootRef.child('formData').on('value', (snapshot) => {\n      const data = snapshot.val()\n      const updatedTime = Date.now()\n      this.setState({ formData: data, updatedTime })\n    })\n  }\n\n  onChangeHoleData(rowIndex, holeIndex, value) {\n    let formData = this.state.formData\n    formData[rowIndex][3][holeIndex] = value\n\n    rootRef.child('/formData/').set(formData)\n  }\n\n  render() {\n    if (!this.state.formData) {\n      return (null)\n    }\n\n    return (\n      <FullBackground color=\"#cecece\">\n        <Context>\n          <Container> \n            <TableWrapper>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableItem width={tableConfig[0]}>Group</TableItem>\n                    <TableItem width={tableConfig[1]}>Ball</TableItem>\n                    <TableItem width={tableConfig[2]}>Name</TableItem>\n                    <TableItem width={tableConfig[3]}>1</TableItem>\n                    <TableItem width={tableConfig[4]}>2</TableItem>\n                    <TableItem width={tableConfig[5]}>3</TableItem>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {\n                    this.state.formData.map((rowData, rowIndex) => {\n                      return (\n                        <TableRow bgColor={+rowData[0] % 2 === 0 ? '#ffffff' : '#dadada'}>\n                          <TableItem width={tableConfig[0]}>{rowData[0]}</TableItem>\n                          <TableItem width={tableConfig[1]}>{rowData[1]}</TableItem>\n                          <TableItem width={tableConfig[2]}>{rowData[2]}</TableItem>\n                          {\n                            rowData[3].map((hole, holeIndex) => {\n                              if ([1,2,3].includes(holeIndex + 1)) {\n                                return (\n                                  <TableItem\n                                    width={tableConfig[3+holeIndex]}\n                                    style={{ cursor: 'pointer', borderLeft: `1px solid ${holeIndex === 9 ? 'white' : 'black '}`, borderRight: `1px solid ${holeIndex === 8 ? 'white' : 'black '}`}}\n                                  >\n                                    <HoleInput type=\"number\" value={hole === 'empty' ? null : hole} onChange={(e) => this.onChangeHoleData(rowIndex , holeIndex, e.target.value)}/>\n                                  </TableItem>\n                                )\n                              }\n                              return null\n                            })\n                          }\n                        </TableRow>\n                      )\n                    })\n                  }\n                </TableBody>\n              </Table>\n            </TableWrapper>\n          </Container>\n        </Context>\n      </FullBackground>\n    )\n  }\n}\n\nexport default Home\n\n\n\n// WEBPACK FOOTER //\n// pages/hole123.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAcA;AAkBA;AAIA;AAMA;AAKA;AAUA;AAEA;AAAA;AAGA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAZA;AAaA;AACA;;;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAIA;AASA;;;;;;;;;;;AA9EA;AACA;AAgFA;AAAA;;;;;;;;;;;;AAvLA;AAEA;AAcA;AAkBA;AAIA;AAMA;AAKA;AAUA;AAKA;AAWA;AAMA;AAMA;AAYA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}